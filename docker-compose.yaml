version: '3'

services:
  mongodb:
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - mynetwork
    command: mongod --noauth
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://mongodb:27017/ --quiet
      interval: 20s
      timeout: 5s
      retries: 20
      start_period: 40s

  minio:
    image: minio/minio:latest
    container_name: minio-engself
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server --address :9000 /data --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - minio-data:/data
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin; do
        echo 'Waiting for Minio to be ready...';
        sleep 5;
      done;
      /usr/bin/mc mb myminio/avatars;
      /usr/bin/mc mb myminio/checks;
      /usr/bin/mc policy set public myminio/avatars;
      /usr/bin/mc policy set public myminio/checks;
      exit 0;
      "
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  minio-data:
    driver: local
  mongo-data:
    driver: local